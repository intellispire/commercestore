***************
*** 43,55 ****
  		$registry = CS()->utils->get_registry( 'reports' );
  		$registry->exchangeArray( array() );
  
- 		// Clear filters.
- 		$filters = array_keys( get_filters() );
- 
- 		foreach ( $filters as $filter ) {
- 			clear_filter( $filter );
- 		}
- 
  		parent::tearDown();
  	}
  
--- 43,48 ----
  		$registry = CS()->utils->get_registry( 'reports' );
  		$registry->exchangeArray( array() );
  
  		parent::tearDown();
  	}
  
***************
*** 682,783 ****
  	 * @group cs_dates
  	 */
  	public function test_get_dates_filter_range_with_non_default_range_set_should_return_that_reports_range() {
- 		$filter_key = get_filter_key( 'dates' );
- 
- 		set_filter_value( 'dates', array(
- 			'range' => 'last_quarter',
- 		) );
  
  		$this->assertSame( 'last_quarter', get_dates_filter_range() );
  	}
  
- 	/**
- 	 * @covers \CS\Reports\get_filter_key
- 	 */
- 	public function test_get_filter_key_should_begin_with_reports() {
- 		$this->assertRegExp( '/^reports/', get_filter_key( 'dates' ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\get_filter_key
- 	 */
- 	public function test_get_filter_key_should_contain_the_filter_name() {
- 		$filter = 'dates';
- 
- 		$this->assertRegExp( "/filter-{$filter}/", get_filter_key( $filter ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\get_filter_key
- 	 */
- 	public function test_get_filter_key_should_contain_the_current_site_id() {
- 		$site = get_current_blog_id();
- 
- 		$this->assertRegExp( "/site-{$site}/", get_filter_key( 'dates' ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\get_filter_key
- 	 */
- 	public function test_get_filter_key_should_contain_the_current_user_id() {
- 		$user = get_current_user_id();
- 
- 		$this->assertRegExp( "/user-{$user}/", get_filter_key( 'dates' ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\get_filter_key
- 	 */
- 	public function test_get_filter_key_should_contain_reports_the_filter_the_site_and_the_user() {
- 		$filter = 'dates';
- 		$site   = get_current_blog_id();
- 		$user   = get_current_user_id();
- 
- 		$expected = "reports:filter-{$filter}:site-{$site}:user-{$user}";
- 
- 		$this->assertSame( $expected, get_filter_key( $filter ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\set_filter_value
- 	 */
- 	public function test_set_filter_key_with_invalid_filter_should_not_set_filter() {
- 		set_filter_value( 'foo', 'bar' );
- 
- 		$this->assertSame( '', get_filter_value( 'foo' ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\set_filter_value
- 	 */
- 	public function test_set_filter_value_with_valid_filter_should_set_it() {
- 		$dates = array(
- 			'from' => date( 'Y-m-d H:i:s' ),
- 			'to'   => date( 'Y-m-d H:i:s' ),
- 		);
- 
- 		set_filter_value( 'dates', $dates );
- 
- 		$this->assertEqualSetsWithIndex( $dates, get_filter_value( 'dates' ) );
- 	}
- 
- 	/**
- 	 * @covers \CS\Reports\clear_filter
- 	 */
- 	public function test_clear_filter_should_default_to_last_30_days() {
- 		$dates = array(
- 			'from' => date( 'Y-m-d H:i:s' ),
- 			'to'   => date( 'Y-m-d H:i:s' ),
- 		);
- 
- 		// Set the dates filter so there's something to clear.
- 		set_filter_value( 'dates', $dates );
- 
- 		$this->assertEqualSetsWithIndex( $dates, get_filter_value( 'dates' ) );
- 
- 		// Clear it.
- 		clear_filter( 'dates' );
- 
  		// Default to last 30 days for filter value.
  		$dates = parse_dates_for_range( 'last_30_days' );
  
--- 679,690 ----
  	 * @group cs_dates
  	 */
  	public function test_get_dates_filter_range_with_non_default_range_set_should_return_that_reports_range() {
+ 		$_GET['range'] = 'last_quarter';
  
  		$this->assertSame( 'last_quarter', get_dates_filter_range() );
  	}
  
+ 	public function test_no_filters_should_default_to_last_30_days() {
  		// Default to last 30 days for filter value.
  		$dates = parse_dates_for_range( 'last_30_days' );
  
